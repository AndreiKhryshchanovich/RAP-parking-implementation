*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 07.12.2021 at 18:33:18
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZSHCH_V_CONTACT.................................*
FORM GET_DATA_ZSHCH_V_CONTACT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_CONTACT WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_CONTACT .
ZSHCH_V_CONTACT-MANDT =
ZSHCH_D_CONTACT-MANDT .
ZSHCH_V_CONTACT-CONTACT_ID =
ZSHCH_D_CONTACT-CONTACT_ID .
ZSHCH_V_CONTACT-PHONE_NUMBER =
ZSHCH_D_CONTACT-PHONE_NUMBER .
ZSHCH_V_CONTACT-EMAIL =
ZSHCH_D_CONTACT-EMAIL .
ZSHCH_V_CONTACT-ADDRESS =
ZSHCH_D_CONTACT-ADDRESS .
<VIM_TOTAL_STRUC> = ZSHCH_V_CONTACT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_CONTACT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_CONTACT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_CONTACT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_CONTACT WHERE
  CONTACT_ID = ZSHCH_V_CONTACT-CONTACT_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_CONTACT .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_CONTACT WHERE
  CONTACT_ID = ZSHCH_V_CONTACT-CONTACT_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_CONTACT.
    ENDIF.
ZSHCH_D_CONTACT-MANDT =
ZSHCH_V_CONTACT-MANDT .
ZSHCH_D_CONTACT-CONTACT_ID =
ZSHCH_V_CONTACT-CONTACT_ID .
ZSHCH_D_CONTACT-PHONE_NUMBER =
ZSHCH_V_CONTACT-PHONE_NUMBER .
ZSHCH_D_CONTACT-EMAIL =
ZSHCH_V_CONTACT-EMAIL .
ZSHCH_D_CONTACT-ADDRESS =
ZSHCH_V_CONTACT-ADDRESS .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_CONTACT .
    ELSE.
    INSERT ZSHCH_D_CONTACT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_CONTACT-UPD_FLAG,
STATUS_ZSHCH_V_CONTACT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_CONTACT.
  SELECT SINGLE * FROM ZSHCH_D_CONTACT WHERE
CONTACT_ID = ZSHCH_V_CONTACT-CONTACT_ID .
ZSHCH_V_CONTACT-MANDT =
ZSHCH_D_CONTACT-MANDT .
ZSHCH_V_CONTACT-CONTACT_ID =
ZSHCH_D_CONTACT-CONTACT_ID .
ZSHCH_V_CONTACT-PHONE_NUMBER =
ZSHCH_D_CONTACT-PHONE_NUMBER .
ZSHCH_V_CONTACT-EMAIL =
ZSHCH_D_CONTACT-EMAIL .
ZSHCH_V_CONTACT-ADDRESS =
ZSHCH_D_CONTACT-ADDRESS .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_CONTACT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_CONTACT-CONTACT_ID TO
ZSHCH_D_CONTACT-CONTACT_ID .
MOVE ZSHCH_V_CONTACT-MANDT TO
ZSHCH_D_CONTACT-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_CONTACT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_CONTACT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_CONTACT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSHCH_V_OWNER...................................*
FORM GET_DATA_ZSHCH_V_OWNER.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_OWNER WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_OWNER .
ZSHCH_V_OWNER-MANDT =
ZSHCH_D_OWNER-MANDT .
ZSHCH_V_OWNER-OWNER_ID =
ZSHCH_D_OWNER-OWNER_ID .
ZSHCH_V_OWNER-CONTACT_ID =
ZSHCH_D_OWNER-CONTACT_ID .
ZSHCH_V_OWNER-BIRTH_DATE =
ZSHCH_D_OWNER-BIRTH_DATE .
    SELECT SINGLE * FROM ZSHCH_D_OWNER_T WHERE
OWNER_ID = ZSHCH_D_OWNER-OWNER_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSHCH_V_OWNER-FIRST_NAME =
ZSHCH_D_OWNER_T-FIRST_NAME .
ZSHCH_V_OWNER-LAST_NAME =
ZSHCH_D_OWNER_T-LAST_NAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZSHCH_V_OWNER.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_OWNER .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_OWNER.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_OWNER-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_OWNER WHERE
  OWNER_ID = ZSHCH_V_OWNER-OWNER_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_OWNER .
    ENDIF.
    DELETE FROM ZSHCH_D_OWNER_T WHERE
    OWNER_ID = ZSHCH_D_OWNER-OWNER_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_OWNER WHERE
  OWNER_ID = ZSHCH_V_OWNER-OWNER_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_OWNER.
    ENDIF.
ZSHCH_D_OWNER-MANDT =
ZSHCH_V_OWNER-MANDT .
ZSHCH_D_OWNER-OWNER_ID =
ZSHCH_V_OWNER-OWNER_ID .
ZSHCH_D_OWNER-CONTACT_ID =
ZSHCH_V_OWNER-CONTACT_ID .
ZSHCH_D_OWNER-BIRTH_DATE =
ZSHCH_V_OWNER-BIRTH_DATE .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_OWNER .
    ELSE.
    INSERT ZSHCH_D_OWNER .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_OWNER_T WHERE
    OWNER_ID = ZSHCH_D_OWNER-OWNER_ID AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZSHCH_D_OWNER_T.
ZSHCH_D_OWNER_T-OWNER_ID =
ZSHCH_D_OWNER-OWNER_ID .
ZSHCH_D_OWNER_T-LANGU =
SY-LANGU .
      ENDIF.
ZSHCH_D_OWNER_T-FIRST_NAME =
ZSHCH_V_OWNER-FIRST_NAME .
ZSHCH_D_OWNER_T-LAST_NAME =
ZSHCH_V_OWNER-LAST_NAME .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_OWNER_T .
    ELSE.
    INSERT ZSHCH_D_OWNER_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_OWNER-UPD_FLAG,
STATUS_ZSHCH_V_OWNER-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_OWNER.
  SELECT SINGLE * FROM ZSHCH_D_OWNER WHERE
OWNER_ID = ZSHCH_V_OWNER-OWNER_ID .
ZSHCH_V_OWNER-MANDT =
ZSHCH_D_OWNER-MANDT .
ZSHCH_V_OWNER-OWNER_ID =
ZSHCH_D_OWNER-OWNER_ID .
ZSHCH_V_OWNER-CONTACT_ID =
ZSHCH_D_OWNER-CONTACT_ID .
ZSHCH_V_OWNER-BIRTH_DATE =
ZSHCH_D_OWNER-BIRTH_DATE .
    SELECT SINGLE * FROM ZSHCH_D_OWNER_T WHERE
OWNER_ID = ZSHCH_D_OWNER-OWNER_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSHCH_V_OWNER-FIRST_NAME =
ZSHCH_D_OWNER_T-FIRST_NAME .
ZSHCH_V_OWNER-LAST_NAME =
ZSHCH_D_OWNER_T-LAST_NAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZSHCH_V_OWNER-FIRST_NAME .
      CLEAR ZSHCH_V_OWNER-LAST_NAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_OWNER USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_OWNER-OWNER_ID TO
ZSHCH_D_OWNER-OWNER_ID .
MOVE ZSHCH_V_OWNER-MANDT TO
ZSHCH_D_OWNER-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_OWNER'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_OWNER TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_OWNER'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZSHCH_D_OWNER-OWNER_ID TO
ZSHCH_D_OWNER_T-OWNER_ID .
MOVE SY-LANGU TO
ZSHCH_D_OWNER_T-LANGU .
MOVE ZSHCH_V_OWNER-MANDT TO
ZSHCH_D_OWNER_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_OWNER_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_OWNER_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_OWNER_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSHCH_V_PTYPE...................................*
FORM GET_DATA_ZSHCH_V_PTYPE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_PTYPE WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_PTYPE .
ZSHCH_V_PTYPE-MANDT =
ZSHCH_D_PTYPE-MANDT .
ZSHCH_V_PTYPE-PARKING_TYPE_ID =
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_PTYPE-PARKING_NAME =
ZSHCH_D_PTYPE-PARKING_NAME .
ZSHCH_V_PTYPE-ADDRESS =
ZSHCH_D_PTYPE-ADDRESS .
ZSHCH_V_PTYPE-BICYCLE_AVAILABILITY =
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY .
<VIM_TOTAL_STRUC> = ZSHCH_V_PTYPE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_PTYPE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_PTYPE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_PTYPE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_PTYPE WHERE
  PARKING_TYPE_ID = ZSHCH_V_PTYPE-PARKING_TYPE_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_PTYPE .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_PTYPE WHERE
  PARKING_TYPE_ID = ZSHCH_V_PTYPE-PARKING_TYPE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_PTYPE.
    ENDIF.
ZSHCH_D_PTYPE-MANDT =
ZSHCH_V_PTYPE-MANDT .
ZSHCH_D_PTYPE-PARKING_TYPE_ID =
ZSHCH_V_PTYPE-PARKING_TYPE_ID .
ZSHCH_D_PTYPE-PARKING_NAME =
ZSHCH_V_PTYPE-PARKING_NAME .
ZSHCH_D_PTYPE-ADDRESS =
ZSHCH_V_PTYPE-ADDRESS .
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY =
ZSHCH_V_PTYPE-BICYCLE_AVAILABILITY .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_PTYPE .
    ELSE.
    INSERT ZSHCH_D_PTYPE .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_PTYPE-UPD_FLAG,
STATUS_ZSHCH_V_PTYPE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_PTYPE.
  SELECT SINGLE * FROM ZSHCH_D_PTYPE WHERE
PARKING_TYPE_ID = ZSHCH_V_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_PTYPE-MANDT =
ZSHCH_D_PTYPE-MANDT .
ZSHCH_V_PTYPE-PARKING_TYPE_ID =
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_PTYPE-PARKING_NAME =
ZSHCH_D_PTYPE-PARKING_NAME .
ZSHCH_V_PTYPE-ADDRESS =
ZSHCH_D_PTYPE-ADDRESS .
ZSHCH_V_PTYPE-BICYCLE_AVAILABILITY =
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_PTYPE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_PTYPE-PARKING_TYPE_ID TO
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
MOVE ZSHCH_V_PTYPE-MANDT TO
ZSHCH_D_PTYPE-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_PTYPE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_PTYPE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_PTYPE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSHCH_V_RENTER..................................*
FORM GET_DATA_ZSHCH_V_RENTER.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_RENTER WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_RENTER .
ZSHCH_V_RENTER-MANDT =
ZSHCH_D_RENTER-MANDT .
ZSHCH_V_RENTER-RENTER_ID =
ZSHCH_D_RENTER-RENTER_ID .
ZSHCH_V_RENTER-CONTACT_ID =
ZSHCH_D_RENTER-CONTACT_ID .
ZSHCH_V_RENTER-PASSPORT =
ZSHCH_D_RENTER-PASSPORT .
ZSHCH_V_RENTER-RENT_NUMBER =
ZSHCH_D_RENTER-RENT_NUMBER .
ZSHCH_V_RENTER-DISCOUNT =
ZSHCH_D_RENTER-DISCOUNT .
    SELECT SINGLE * FROM ZSHCH_D_RENTER_T WHERE
RENTER_ID = ZSHCH_D_RENTER-RENTER_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSHCH_V_RENTER-FIRST_NAME =
ZSHCH_D_RENTER_T-FIRST_NAME .
ZSHCH_V_RENTER-LAST_NAME =
ZSHCH_D_RENTER_T-LAST_NAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZSHCH_V_RENTER.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_RENTER .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_RENTER.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_RENTER-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_RENTER WHERE
  RENTER_ID = ZSHCH_V_RENTER-RENTER_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_RENTER .
    ENDIF.
    DELETE FROM ZSHCH_D_RENTER_T WHERE
    RENTER_ID = ZSHCH_D_RENTER-RENTER_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_RENTER WHERE
  RENTER_ID = ZSHCH_V_RENTER-RENTER_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_RENTER.
    ENDIF.
ZSHCH_D_RENTER-MANDT =
ZSHCH_V_RENTER-MANDT .
ZSHCH_D_RENTER-RENTER_ID =
ZSHCH_V_RENTER-RENTER_ID .
ZSHCH_D_RENTER-CONTACT_ID =
ZSHCH_V_RENTER-CONTACT_ID .
ZSHCH_D_RENTER-PASSPORT =
ZSHCH_V_RENTER-PASSPORT .
ZSHCH_D_RENTER-RENT_NUMBER =
ZSHCH_V_RENTER-RENT_NUMBER .
ZSHCH_D_RENTER-DISCOUNT =
ZSHCH_V_RENTER-DISCOUNT .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_RENTER .
    ELSE.
    INSERT ZSHCH_D_RENTER .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_RENTER_T WHERE
    RENTER_ID = ZSHCH_D_RENTER-RENTER_ID AND
    LANGU = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZSHCH_D_RENTER_T.
ZSHCH_D_RENTER_T-RENTER_ID =
ZSHCH_D_RENTER-RENTER_ID .
ZSHCH_D_RENTER_T-LANGU =
SY-LANGU .
      ENDIF.
ZSHCH_D_RENTER_T-FIRST_NAME =
ZSHCH_V_RENTER-FIRST_NAME .
ZSHCH_D_RENTER_T-LAST_NAME =
ZSHCH_V_RENTER-LAST_NAME .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_RENTER_T .
    ELSE.
    INSERT ZSHCH_D_RENTER_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_RENTER-UPD_FLAG,
STATUS_ZSHCH_V_RENTER-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_RENTER.
  SELECT SINGLE * FROM ZSHCH_D_RENTER WHERE
RENTER_ID = ZSHCH_V_RENTER-RENTER_ID .
ZSHCH_V_RENTER-MANDT =
ZSHCH_D_RENTER-MANDT .
ZSHCH_V_RENTER-RENTER_ID =
ZSHCH_D_RENTER-RENTER_ID .
ZSHCH_V_RENTER-CONTACT_ID =
ZSHCH_D_RENTER-CONTACT_ID .
ZSHCH_V_RENTER-PASSPORT =
ZSHCH_D_RENTER-PASSPORT .
ZSHCH_V_RENTER-RENT_NUMBER =
ZSHCH_D_RENTER-RENT_NUMBER .
ZSHCH_V_RENTER-DISCOUNT =
ZSHCH_D_RENTER-DISCOUNT .
    SELECT SINGLE * FROM ZSHCH_D_RENTER_T WHERE
RENTER_ID = ZSHCH_D_RENTER-RENTER_ID AND
LANGU = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZSHCH_V_RENTER-FIRST_NAME =
ZSHCH_D_RENTER_T-FIRST_NAME .
ZSHCH_V_RENTER-LAST_NAME =
ZSHCH_D_RENTER_T-LAST_NAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZSHCH_V_RENTER-FIRST_NAME .
      CLEAR ZSHCH_V_RENTER-LAST_NAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_RENTER USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_RENTER-RENTER_ID TO
ZSHCH_D_RENTER-RENTER_ID .
MOVE ZSHCH_V_RENTER-MANDT TO
ZSHCH_D_RENTER-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_RENTER'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_RENTER TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_RENTER'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZSHCH_D_RENTER-RENTER_ID TO
ZSHCH_D_RENTER_T-RENTER_ID .
MOVE SY-LANGU TO
ZSHCH_D_RENTER_T-LANGU .
MOVE ZSHCH_V_RENTER-MANDT TO
ZSHCH_D_RENTER_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_RENTER_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_RENTER_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_RENTER_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZSHCH_V_SP_FIN..................................*
FORM GET_DATA_ZSHCH_V_SP_FIN.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_STYPE WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_SP_FIN .
ZSHCH_V_SP_FIN-MANDT =
ZSHCH_D_STYPE-MANDT .
ZSHCH_V_SP_FIN-SPACE_TYPE_ID =
ZSHCH_D_STYPE-SPACE_TYPE_ID .
ZSHCH_V_SP_FIN-SPACE_SIZE =
ZSHCH_D_STYPE-SPACE_SIZE .
ZSHCH_V_SP_FIN-RENTAL_DAY =
ZSHCH_D_STYPE-RENTAL_DAY .
ZSHCH_V_SP_FIN-ADMINISTRATION_FEE =
ZSHCH_D_STYPE-ADMINISTRATION_FEE .
ZSHCH_V_SP_FIN-CURRENT_SPACE_PRICE =
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE .
    SELECT SINGLE * FROM ZSHCH_D_PTYPE WHERE
PARKING_TYPE_ID = ZSHCH_D_STYPE-PARKING_TYPE_ID .
    IF SY-SUBRC EQ 0.
ZSHCH_V_SP_FIN-PARKING_TYPE_ID =
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_SP_FIN-PARKING_NAME =
ZSHCH_D_PTYPE-PARKING_NAME .
ZSHCH_V_SP_FIN-ADDRESS =
ZSHCH_D_PTYPE-ADDRESS .
ZSHCH_V_SP_FIN-BICYCLE_AVAILABILITY =
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY .
    ENDIF.
<VIM_TOTAL_STRUC> = ZSHCH_V_SP_FIN.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_SP_FIN .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_SP_FIN.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_SP_FIN-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_STYPE WHERE
  SPACE_TYPE_ID = ZSHCH_V_SP_FIN-SPACE_TYPE_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_STYPE .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_STYPE WHERE
  SPACE_TYPE_ID = ZSHCH_V_SP_FIN-SPACE_TYPE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_STYPE.
    ENDIF.
ZSHCH_D_STYPE-MANDT =
ZSHCH_V_SP_FIN-MANDT .
ZSHCH_D_STYPE-SPACE_TYPE_ID =
ZSHCH_V_SP_FIN-SPACE_TYPE_ID .
ZSHCH_D_STYPE-SPACE_SIZE =
ZSHCH_V_SP_FIN-SPACE_SIZE .
ZSHCH_D_STYPE-RENTAL_DAY =
ZSHCH_V_SP_FIN-RENTAL_DAY .
ZSHCH_D_STYPE-ADMINISTRATION_FEE =
ZSHCH_V_SP_FIN-ADMINISTRATION_FEE .
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE =
ZSHCH_V_SP_FIN-CURRENT_SPACE_PRICE .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_STYPE .
    ELSE.
    INSERT ZSHCH_D_STYPE .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_SP_FIN-UPD_FLAG,
STATUS_ZSHCH_V_SP_FIN-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_SP_FIN.
  SELECT SINGLE * FROM ZSHCH_D_STYPE WHERE
SPACE_TYPE_ID = ZSHCH_V_SP_FIN-SPACE_TYPE_ID .
ZSHCH_V_SP_FIN-MANDT =
ZSHCH_D_STYPE-MANDT .
ZSHCH_V_SP_FIN-SPACE_TYPE_ID =
ZSHCH_D_STYPE-SPACE_TYPE_ID .
ZSHCH_V_SP_FIN-SPACE_SIZE =
ZSHCH_D_STYPE-SPACE_SIZE .
ZSHCH_V_SP_FIN-RENTAL_DAY =
ZSHCH_D_STYPE-RENTAL_DAY .
ZSHCH_V_SP_FIN-ADMINISTRATION_FEE =
ZSHCH_D_STYPE-ADMINISTRATION_FEE .
ZSHCH_V_SP_FIN-CURRENT_SPACE_PRICE =
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE .
    SELECT SINGLE * FROM ZSHCH_D_PTYPE WHERE
PARKING_TYPE_ID = ZSHCH_D_STYPE-PARKING_TYPE_ID .
    IF SY-SUBRC EQ 0.
ZSHCH_V_SP_FIN-PARKING_TYPE_ID =
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_SP_FIN-PARKING_NAME =
ZSHCH_D_PTYPE-PARKING_NAME .
ZSHCH_V_SP_FIN-ADDRESS =
ZSHCH_D_PTYPE-ADDRESS .
ZSHCH_V_SP_FIN-BICYCLE_AVAILABILITY =
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZSHCH_V_SP_FIN-PARKING_TYPE_ID .
      CLEAR ZSHCH_V_SP_FIN-PARKING_NAME .
      CLEAR ZSHCH_V_SP_FIN-ADDRESS .
      CLEAR ZSHCH_V_SP_FIN-BICYCLE_AVAILABILITY .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_SP_FIN USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_SP_FIN-SPACE_TYPE_ID TO
ZSHCH_D_STYPE-SPACE_TYPE_ID .
MOVE ZSHCH_V_SP_FIN-MANDT TO
ZSHCH_D_STYPE-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_STYPE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_STYPE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_STYPE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZSHCH_V_SP_FIN USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZSHCH_D_STYPE-MANDT =
ZSHCH_V_SP_FIN-MANDT .
ZSHCH_D_STYPE-SPACE_TYPE_ID =
ZSHCH_V_SP_FIN-SPACE_TYPE_ID .
ZSHCH_D_STYPE-SPACE_SIZE =
ZSHCH_V_SP_FIN-SPACE_SIZE .
ZSHCH_D_STYPE-RENTAL_DAY =
ZSHCH_V_SP_FIN-RENTAL_DAY .
ZSHCH_D_STYPE-ADMINISTRATION_FEE =
ZSHCH_V_SP_FIN-ADMINISTRATION_FEE .
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE =
ZSHCH_V_SP_FIN-CURRENT_SPACE_PRICE .
    SELECT SINGLE * FROM ZSHCH_D_PTYPE WHERE
PARKING_TYPE_ID = ZSHCH_D_STYPE-PARKING_TYPE_ID .
    IF SY-SUBRC EQ 0.
ZSHCH_V_SP_FIN-PARKING_TYPE_ID =
ZSHCH_D_PTYPE-PARKING_TYPE_ID .
ZSHCH_V_SP_FIN-PARKING_NAME =
ZSHCH_D_PTYPE-PARKING_NAME .
ZSHCH_V_SP_FIN-ADDRESS =
ZSHCH_D_PTYPE-ADDRESS .
ZSHCH_V_SP_FIN-BICYCLE_AVAILABILITY =
ZSHCH_D_PTYPE-BICYCLE_AVAILABILITY .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZSHCH_V_SP_FIN-PARKING_TYPE_ID .
      CLEAR ZSHCH_V_SP_FIN-PARKING_NAME .
      CLEAR ZSHCH_V_SP_FIN-ADDRESS .
      CLEAR ZSHCH_V_SP_FIN-BICYCLE_AVAILABILITY .
    ENDIF.
ENDFORM.
*...processing: ZSHCH_V_STYPE...................................*
FORM GET_DATA_ZSHCH_V_STYPE.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSHCH_D_STYPE WHERE
(VIM_WHERETAB) .
    CLEAR ZSHCH_V_STYPE .
ZSHCH_V_STYPE-MANDT =
ZSHCH_D_STYPE-MANDT .
ZSHCH_V_STYPE-SPACE_TYPE_ID =
ZSHCH_D_STYPE-SPACE_TYPE_ID .
ZSHCH_V_STYPE-PARKING_TYPE_ID =
ZSHCH_D_STYPE-PARKING_TYPE_ID .
ZSHCH_V_STYPE-SPACE_SIZE =
ZSHCH_D_STYPE-SPACE_SIZE .
ZSHCH_V_STYPE-RENTAL_DAY =
ZSHCH_D_STYPE-RENTAL_DAY .
ZSHCH_V_STYPE-ADMINISTRATION_FEE =
ZSHCH_D_STYPE-ADMINISTRATION_FEE .
ZSHCH_V_STYPE-CURRENT_SPACE_PRICE =
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE .
<VIM_TOTAL_STRUC> = ZSHCH_V_STYPE.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSHCH_V_STYPE .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSHCH_V_STYPE.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSHCH_V_STYPE-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_STYPE WHERE
  SPACE_TYPE_ID = ZSHCH_V_STYPE-SPACE_TYPE_ID .
    IF SY-SUBRC = 0.
    DELETE ZSHCH_D_STYPE .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSHCH_D_STYPE WHERE
  SPACE_TYPE_ID = ZSHCH_V_STYPE-SPACE_TYPE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSHCH_D_STYPE.
    ENDIF.
ZSHCH_D_STYPE-MANDT =
ZSHCH_V_STYPE-MANDT .
ZSHCH_D_STYPE-SPACE_TYPE_ID =
ZSHCH_V_STYPE-SPACE_TYPE_ID .
ZSHCH_D_STYPE-PARKING_TYPE_ID =
ZSHCH_V_STYPE-PARKING_TYPE_ID .
ZSHCH_D_STYPE-SPACE_SIZE =
ZSHCH_V_STYPE-SPACE_SIZE .
ZSHCH_D_STYPE-RENTAL_DAY =
ZSHCH_V_STYPE-RENTAL_DAY .
ZSHCH_D_STYPE-ADMINISTRATION_FEE =
ZSHCH_V_STYPE-ADMINISTRATION_FEE .
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE =
ZSHCH_V_STYPE-CURRENT_SPACE_PRICE .
    IF SY-SUBRC = 0.
    UPDATE ZSHCH_D_STYPE .
    ELSE.
    INSERT ZSHCH_D_STYPE .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSHCH_V_STYPE-UPD_FLAG,
STATUS_ZSHCH_V_STYPE-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSHCH_V_STYPE.
  SELECT SINGLE * FROM ZSHCH_D_STYPE WHERE
SPACE_TYPE_ID = ZSHCH_V_STYPE-SPACE_TYPE_ID .
ZSHCH_V_STYPE-MANDT =
ZSHCH_D_STYPE-MANDT .
ZSHCH_V_STYPE-SPACE_TYPE_ID =
ZSHCH_D_STYPE-SPACE_TYPE_ID .
ZSHCH_V_STYPE-PARKING_TYPE_ID =
ZSHCH_D_STYPE-PARKING_TYPE_ID .
ZSHCH_V_STYPE-SPACE_SIZE =
ZSHCH_D_STYPE-SPACE_SIZE .
ZSHCH_V_STYPE-RENTAL_DAY =
ZSHCH_D_STYPE-RENTAL_DAY .
ZSHCH_V_STYPE-ADMINISTRATION_FEE =
ZSHCH_D_STYPE-ADMINISTRATION_FEE .
ZSHCH_V_STYPE-CURRENT_SPACE_PRICE =
ZSHCH_D_STYPE-CURRENT_SPACE_PRICE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSHCH_V_STYPE USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSHCH_V_STYPE-SPACE_TYPE_ID TO
ZSHCH_D_STYPE-SPACE_TYPE_ID .
MOVE ZSHCH_V_STYPE-MANDT TO
ZSHCH_D_STYPE-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSHCH_D_STYPE'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSHCH_D_STYPE TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSHCH_D_STYPE'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
